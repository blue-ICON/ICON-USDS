version = '0.1.0'

// for integration tests
sourceSets {
    intTest {}
}
configurations {
    intTestImplementation.extendsFrom testImplementation
    intTestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
    compileOnly 'foundation.icon:javaee-api:0.9.1'
    implementation 'com.github.sink772:javaee-tokens:0.6.1'
    implementation 'foundation.icon:javaee-scorex:0.5.3'

    testImplementation 'foundation.icon:javaee-unittest:0.9.2'
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '4.6.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    intTestImplementation project(':testinteg')
    intTestImplementation 'foundation.icon:icon-sdk:2.0.0'
    intTestRuntimeOnly project(':stable-coin')
}

optimizedJar {
    mainClassName = 'com.icon.score.StableCoin'
    archivesBaseName = 'stable-coin'
}
println("---"+rootProject.findProperty("usds-address") as String)
deployJar {
    endpoints {
        lisbon {
            uri = 'https://lisbon.net.solidwallet.io/api/v3'
            to = rootProject.findProperty("usds-address") as String
            nid = 0x2
        }
        sejong {
            uri = 'https://sejong.net.solidwallet.io/api/v3'
            to = rootProject.findProperty("usds-address") as String
            nid = 0x53
        }
        berlin {
            uri = 'https://berlin.net.solidwallet.io/api/v3'
            to = rootProject.findProperty("usds-address") as String
            nid = 0x7
        }
        mainnet {
            uri = 'https://ctz.solidwallet.io/api/v3'
            to = rootProject.findProperty("usds-address") as String
            nid = 0x1
        }
    }
    keystore = rootProject.hasProperty('keystoreName') ? "$keystoreName" : ''
    password = rootProject.hasProperty('keystorePass') ? "$keystorePass" : ''
    parameters {
        arg('_name', 'Stably USD')
        arg('_symbol', 'USDS')
        arg('_decimals', '18')
        arg('_admin', rootProject.findProperty("admin-address") as String)
        arg('_nIssuers', '2')
    }
}

test {
    useJUnitPlatform()
}

def stableCoinJar = project(':stable-coin').getTasks().getByName('optimizedJar')

task integrationTest(type: Test, dependsOn: optimizedJar) {
    useJUnitPlatform()
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath
    testLogging.showStandardStreams = true

    // use the common config files
    systemProperty('env.props', new File(project(':testinteg').projectDir, 'conf/env.props'))

    def prefix = 'score.path.'
    systemProperty(prefix + project.name, optimizedJar.outputJarName)
    systemProperty(prefix + 'stable-coin', stableCoinJar.outputJarName)
}

integrationTest.dependsOn(stableCoinJar)
